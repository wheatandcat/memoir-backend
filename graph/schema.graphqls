# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type PageInfo {
  endCursor: String!
  hasNextPage: Boolean!
}

type User {
  "ユーザーID"
  id: ID!
  "表示名"
  displayName: String!
  "画像URL"
  image: String!
  "作成日時"
  createdAt: Time!
  "更新日時"
  updatedAt: Time!
}

type Invite {
  "ユーザーID"
  userID: ID!
  "招待コード"
  code: String!
  "作成日時"
  createdAt: Time!
  "更新日時"
  updatedAt: Time!
}

type Item {
  "アイテムID"
  id: ID!
  "ユーザーID"
  userID: String!
  "タイトル"
  title: String!
  "カテゴリーID"
  categoryID: Int!
  "日付"
  date: Time!
  like: Boolean!
  dislike: Boolean!
  "作成日時"
  createdAt: Time!
  "更新日時"
  updatedAt: Time!
}

type ItemsInPeriodEdge {
  node: Item
  cursor: String!
}

type ItemsInPeriod {
  pageInfo: PageInfo!
  edges: [ItemsInPeriodEdge!]!
}

input InputItemsInPeriod {
  after: String
  first: Int!
  startDate: Time!
  endDate: Time!
}

type Query {
  "ユーザーを取得する"
  user: User!
  "アイテムを取得する"
  item(id: ID!): Item
  "アイテムを日付で取得する"
  itemsByDate(date: Time!): [Item]
  "アイテムを日付で取得する"
  itemsInDate(date: Time!): [Item]
  "期間でアイテムを取得する"
  itemsInPeriod(input: InputItemsInPeriod!): ItemsInPeriod!
  "招待コードを取得する"
  invite: Invite!
  "招待コードからユーザーを取得する"
  inviteByCode(code: String!): User!
}

input NewUser {
  "ユーザーID"
  id: ID!
}

input UpdateUser {
  "表示名"
  displayName: String!
  "画像URL"
  image: String!
}

input NewItem {
  "タイトル"
  title: String!
  "カテゴリーID"
  categoryID: Int!
  "日付"
  date: Time!
  like: Boolean!
  dislike: Boolean!
}

input UpdateItem {
  "アイテムID"
  id: ID!
  "タイトル"
  title: String
  "カテゴリーID"
  categoryID: Int
  "日付"
  date: Time
  like: Boolean
  dislike: Boolean
}

input DeleteItem {
  "アイテムID"
  id: ID!
}

type Mutation {
  "ユーザーを作成する"
  createUser(input: NewUser!): User!
  "認証ユーザーを作成する"
  createAuthUser(input: NewUser!): User!
  "ユーザーを更新する"
  updateUser(input: UpdateUser!): User!
  "アイテムを作成する"
  createItem(input: NewItem!): Item!
  "アイテムを更新する"
  updateItem(input: UpdateItem!): Item!
  "アイテムを削除する"
  deleteItem(input: DeleteItem!): Item!
  "招待コード作成する"
  createInvite: Invite!
  "招待コード更新する"
  updateInvite: Invite!
}

scalar Time
